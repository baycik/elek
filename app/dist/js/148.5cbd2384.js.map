{"version":3,"file":"js/148.5cbd2384.js","mappings":"mLAKaA,MAAA,mG,gMAJTC,EAAAA,EAAAA,IAcM,aAbNC,EAAAA,EAAAA,IAWcC,EAAAA,CAXDC,MAAM,SAAO,C,kBACtB,IAA8C,EAA9CF,EAAAA,EAAAA,IAA8CG,EAAAA,CAAlCC,IAAI,OAAK,C,kBAAC,IAAW,UAAX,kB,WACtBJ,EAAAA,EAAAA,IAAkEK,EAAAA,CAAvDC,KAAK,SAASC,YAAY,Y,WAAqBC,EAAAA,M,qCAAAA,EAAAA,MAAK,I,wBAC/DC,EAAAA,EAAAA,GAOM,MAPNC,EAOM,gBANFX,EAAAA,EAAAA,IAKMY,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IALcC,EAAAA,cAARC,K,WAAZd,EAAAA,EAAAA,IAKM,OAL6Be,IAAKD,EAAKE,S,EACzCf,EAAAA,EAAAA,IAGYgB,EAAAA,CAHAd,MAAOW,GAAMX,MAASe,QAAK,GAAEL,EAAAA,WAAWC,GAAMK,Y,mBACtD,IAA0D,CAAjC,QAAhBL,EAAKM,cAAW,WAAzBpB,EAAAA,EAAAA,IAA0D,eAArBc,GAAMK,WAAS,iBACpDnB,EAAAA,EAAAA,IAAuC,kBAAxBc,GAAMK,WAAS,O,sDAK9ClB,EAAAA,EAAAA,IAAsCoB,EAAAA,CAA1BhB,IAAI,UAAQ,W,eAK5B,GACIiB,WAAW,CACPC,UAASA,EAAAA,GAEbC,OACI,MAAO,CACHC,SAAS,GACTC,MAAM,GAEd,EACAC,UACIC,KAAKC,SACT,EACAC,SAAS,CACLC,eACI,IAAI,IAAIjB,KAAQc,KAAKH,SACC,GAAfX,EAAKkB,SACJlB,EAAKX,MAAM,QAEM,OAAlBW,EAAKM,YACJN,EAAKX,MAAM,OAEM,eAAlBW,EAAKM,YACJN,EAAKX,MAAM,UAEM,QAAlBW,EAAKM,YACJN,EAAKX,MAAM,SAEM,QAAlBW,EAAKM,YACJN,EAAKX,MAAM,SAEG,GAAfW,EAAKkB,SACJlB,EAAKX,MAAM,MAEXW,EAAKX,MAAM,OAGnB,OAAOyB,KAAKH,QAChB,GAEJQ,QAAQ,CACJC,aAAaf,EAAUgB,GACnB,IAAI,MAAMrB,KAAQqB,EACd,GAAGhB,GAAWL,EAAKK,UACf,OAAOL,EAGf,OAAO,IACX,EACAsB,WAAWjB,GACPS,KAAKS,MAAMC,OAAOC,KAAKpB,EAC3B,EACAqB,gBACI,MAAMC,EAAQ,CACVf,MAAME,KAAKF,OAEf,IACIE,KAAKH,eAAeG,KAAKc,MAAM,eAAeD,EACpC,CAAZ,MAAY,CAClB,GAEJE,MAAM,CACF,MAAQ,WACJf,KAAKC,SACT,I,QC9ER,MAAMe,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://app/./src/components/WordList.vue","webpack://app/./src/components/WordList.vue?9308"],"sourcesContent":["<template>\r\n    <div>\r\n    <sui-segment color=\"green\">\r\n        <sui-header ref=\"ttt\">Soz Listesi</sui-header>\r\n        <sui-input icon=\"search\" placeholder=\"Search...\" v-model=\"query\"/>\r\n        <div style=\"display:grid;grid-template-columns:repeat(auto-fit, 200px);gap:10px;margin-top:20px\">\r\n            <div v-for=\"word in wordListComp\" :key=\"word.word_id\">\r\n                <sui-label :color=\"word?.color\"  @click=\"itemReveal(word?.word_data)\">\r\n                    <s v-if=\"word.word_status=='typo'\">{{word?.word_data}}</s>\r\n                    <span v-else>{{word?.word_data}}</span>\r\n                </sui-label>\r\n            </div>\r\n        </div>\r\n    </sui-segment>\r\n    <word-modal ref=\"wmodal\"></word-modal>\r\n    </div>\r\n</template>\r\n<script>\r\nimport WordModal from \"@/components/WordModal.vue\"\r\nexport default{\r\n    components:{\r\n        WordModal\r\n    },\r\n    data(){\r\n        return {\r\n            wordList:[],\r\n            query:'',\r\n        }\r\n    },\r\n    mounted(){\r\n        this.listGet();\r\n    },\r\n    computed:{\r\n        wordListComp(){\r\n            for(let word of this.wordList){\r\n                if(word.is_known==1){\r\n                    word.color='green'\r\n                } else\r\n                if(word.word_status=='new'){\r\n                    word.color='teal'\r\n                } else\r\n                if(word.word_status=='alternative'){\r\n                    word.color='primary'\r\n                } else\r\n                if(word.word_status=='skip'){\r\n                    word.color='yellow'\r\n                } else\r\n                if(word.word_status=='typo'){\r\n                    word.color='orange'\r\n                } else\r\n                if(word.is_known!=1){\r\n                    word.color='red'\r\n                } else {\r\n                    word.color='gray'\r\n                }\r\n            }\r\n            return this.wordList\r\n        }\r\n    },\r\n    methods:{\r\n        itemFindMeta(word_data,word_list){\r\n            for(const word of word_list){\r\n                if(word_data==word.word_data){\r\n                    return word\r\n                }\r\n            }\r\n            return null\r\n        },\r\n        itemReveal(word_data){\r\n            this.$refs.wmodal.show(word_data)\r\n        },\r\n        async listGet(){\r\n            const request={\r\n                query:this.query\r\n            }\r\n            try{\r\n                this.wordList=await this.$post('Word/listGet',request)\r\n            } catch{/** */}\r\n        },\r\n    },\r\n    watch:{\r\n        'query':function(){\r\n            this.listGet();\r\n        }\r\n    }\r\n}\r\n</script>","import { render } from \"./WordList.vue?vue&type=template&id=bfeb4ae8\"\nimport script from \"./WordList.vue?vue&type=script&lang=js\"\nexport * from \"./WordList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"W:\\\\Wamp.NET\\\\sites\\\\Elek\\\\elek\\\\app\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["style","_createElementBlock","_createVNode","_component_sui_segment","color","_component_sui_header","ref","_component_sui_input","icon","placeholder","$data","_createElementVNode","_hoisted_1","_Fragment","$options","word","key","word_id","_component_sui_label","onClick","word_data","word_status","_component_word_modal","components","WordModal","data","wordList","query","mounted","this","listGet","computed","wordListComp","is_known","methods","itemFindMeta","word_list","itemReveal","$refs","wmodal","show","async","request","$post","watch","__exports__","render"],"sourceRoot":""}